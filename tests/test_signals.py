from guiserver.signals import Signals
from math import isclose

import numpy as np

test_x_svc = [0,0.015847183,0.027477807,0.042585531,0.07489208,0.09940015,0.108102666,0.123971516,0.156437965,0.188777825,0.218226154,0.228005778,0.245309288,0.249807587,0.269873991,0.302350434,0.334733601,0.367113437,0.399416653,0.431669902,0.463979781,0.496352955,0.528732791,0.561119289,0.593532437,0.625912274,0.65829211,0.690671946,0.723048451,0.75]
test_x_hra = [0,0.028809792,0.08273474,0.098016385,0.10654826,0.110085155,0.122650315,0.144257868,0.168441562,0.187247954,0.211993619,0.231153072,0.238708497,0.253331743,0.277402407,0.301670873,0.325798052,0.349769815,0.373798092,0.397911142,0.422038321,0.443443363,0.465013239,0.48945125,0.510375915,0.527952068,0.545528221,0.554151462,0.577854778,0.587870387,0.75]
test_x_ivc = [0,0.038412611,0.060004148,0.081087228,0.10738618,0.133657896,0.159721446,0.185668266,0.211591742,0.236245343,0.260981554,0.287321362,0.313770115,0.340072958,0.366299927,0.392419895,0.418512627,0.444546995,0.470643616,0.496763585,0.522883553,0.549003521,0.575172126,0.600825181,0.62674671,0.653246046,0.679708418,0.70586535,0.727684258,0.75]
test_x_lra = [0,0.018471721,0.049638989,0.082892098,0.103181133,0.128709067,0.151008933,0.177135981,0.223846771,0.26273566,0.2826625,0.307993975,0.333417902,0.358957393,0.384531552,0.410244387,0.429832366,0.449512797,0.475595434,0.501516283,0.527217561,0.552722383,0.571616983,0.597087135,0.622776857,0.648478136,0.674156302,0.699788243,0.725558859,0.75]
test_x_mra = [0,0.029839203,0.048222888,0.06223118,0.079589233,0.093365969,0.103983759,0.122807616,0.143170417,0.154703251,0.166606574,0.199053704,0.212482707,0.230777389,0.254126652,0.271533464,0.293305692,0.323907488,0.353137036,0.382373897,0.41158516,0.440701344,0.469872381,0.493506882,0.50983491,0.529070168,0.555559789,0.582018325,0.611291755,0.628775362,0.75]
test_x_pa  = [0,0.014205258,0.029814629,0.043022557,0.063434811,0.089502762,0.106660759,0.113865084,0.124671571,0.147485266,0.175101844,0.19558011,0.212154696,0.235359116,0.26519337,0.301177527,0.332396268,0.363615008,0.394833749,0.426052489,0.454869788,0.483687087,0.514905827,0.546124568,0.577343309,0.608562049,0.63978079,0.67099953,0.702218271,0.719028362,0.75]
test_x_rv  = [0,0.032484879,0.095802536,0.133747812,0.162716265,0.191778761,0.214170877,0.227896995,0.238729978,0.246676501,0.254701773,0.260719615,0.264718727,0.287618921,0.328671662,0.353669293,0.382573377,0.411504851,0.440457326,0.468325664,0.496156372,0.524997912,0.553928473,0.58292523,0.612018313,0.641163439,0.6691612,0.696924571,0.725862894,0.75]
test_x_rvw = [0,0.012008895,0.058487769,0.079781319,0.158450704,0.26675315,0.326295315,0.329110946,0.330216342,0.337036425,0.339852056,0.34098526,0.351430903,0.366318985,0.381120166,0.395886585,0.410653004,0.425384663,0.44014413,0.45496269,0.467434892,0.47626763,0.48515251,0.492817282,0.501097323,0.509311317,0.518189244,0.533115564,0.550685693,0.563806523,0.75]
test_x_rip = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]

test_y_svc = [-0.0858943180000000,-0.146472741000000,-0.183285430000000,-0.235787398000000,-0.263489366000000,-0.184020913000000,-0.127238558000000,-0.0817422360000000,-0.0518183770000000,-0.0675149640000000,-0.152735249000000,-0.240602349000000,-0.117794216000000,-0.0588105240000000,-0.0179166150000000,0.0156088590000000,0.0155192660000000,0.0142291360000000,-0.0146733700000000,-0.0615839480000000,-0.0880853780000000,-0.0917765840000000,-0.0930667150000000,-0.0919557690000000,-0.0812405190000000,-0.0825306490000000,-0.0838207800000000,-0.0851109100000000,-0.0876015790000000,-0.0858943180000000]
test_y_hra = [-0.293132306000000,-1.46783220400000,-0.528296556000000,-0.420089244000000,-0.327709260000000,-0.258266502000000,-0.190605535000000,-0.122850376000000,-0.113219284000000,-0.0974318070000000,-1.47842404000000,0.0655255380000000,0.0125683670000000,-0.0466807670000000,-0.0520575380000000,-0.0311705500000000,-0.0290433900000000,-0.0475520390000000,-0.0585567580000000,-0.0583055800000000,-0.0561784200000000,-0.0153123470000000,0.0474401910000000,0.0908389720000000,0.0679216320000000,0.000574636000000000,-0.0667723590000000,-0.122332322000000,-0.176484644000000,-0.293132306000000,-0.293132306000000]
test_y_ivc = [0.0315906450000000,-0.349402053000000,0.000158747000000000,-0.0101613100000000,-0.0268878920000000,-0.0412171630000000,-0.0372241260000000,-0.0229568970000000,-0.00663483000000000,0.0393854160000000,0.0781346960000000,0.0578121460000000,0.0279003510000000,0.0108312960000000,0.000440465000000000,-0.000532357000000000,0.000892132000000000,0.00745371700000000,0.00853573400000000,0.00756291200000000,0.00659009000000000,0.00561726800000000,0.000363532000000000,0.0404874770000000,0.0569807800000000,0.0226168360000000,-0.00849361500000000,-0.0127199310000000,0.0365842770000000,0.0315906450000000]
test_y_lra = [-0.211672832000000,-0.0239416360000000,0.387279079000000,-0.575524044000000,-0.378049360000000,-0.346018589000000,-0.311343257000000,0.0250719280000000,-1.85090423300000,-0.324290999000000,-0.294745674000000,-0.227486976000000,-0.176806127000000,-0.146847587000000,-0.123105741000000,-0.124230666000000,-0.179470424000000,-0.251288029000000,-0.318724347000000,-0.357149430000000,-0.356202124000000,-0.320026892000000,-0.250932790000000,-0.208540864000000,-0.205521328000000,-0.204574022000000,-0.199482255000000,-0.186101563000000,-0.197587643000000,-0.211672832000000]
test_y_mra = [0.0246121850000000,0.793750000000000,-1.81250000000000,-0.304473921000000,-0.223778477000000,-0.113830935000000,-0.0283442000000000,0.0510903780000000,0.0990032970000000,0.131250000000000,0.206250000000000,-1.21875000000000,0.225000000000000,0.164568345000000,0.187263939000000,0.247785522000000,0.317763602000000,0.365802608000000,0.376393885000000,0.383959083000000,0.402115558000000,0.459611061000000,0.494410971000000,0.399089478000000,0.300741906000000,0.209959532000000,0.143764051000000,0.0904294060000000,0.0828642090000000,0.0246121850000000,0.0246121850000000]
test_y_pa  = [-0.0751202990000000,-0.122996237000000,-0.205128106000000,-0.271352768000000,-0.356497242000000,-0.334031367000000,-0.270456262000000,-0.183605201000000,-0.103376932000000,-0.0209819380000000,0.000299820000000000,0.0212974510000000,0.482311531000000,-0.483559080000000,-0.0376047050000000,0.0316340150000000,0.0640368410000000,0.0692508890000000,0.0641287080000000,0.0250767290000000,-0.0301430880000000,-0.106893311000000,-0.145271188000000,-0.143652350000000,-0.122035155000000,-0.0810937050000000,-0.0390287510000000,-0.0286465880000000,-0.0261289480000000,-0.0751202990000000,-0.0751202990000000]
test_y_rv  = [-0.117908552000000,-3.12627011000000,0.247142252000000,0.239100745000000,0.238811490000000,0.273237778000000,0.340558250000000,0.417023558000000,0.494887033000000,0.576613311000000,0.687409641000000,0.770096117000000,0.820501817000000,1.05524978800000,0.209674005000000,0.148765380000000,0.124714517000000,0.110774976000000,0.104587450000000,0.0546580320000000,-0.00916241800000000,-0.0563008020000000,-0.0705773870000000,-0.0604182740000000,-0.0147010080000000,0.0502277710000000,0.0480743540000000,-0.0406030990000000,-0.0520148090000000,-0.117908552000000]
test_y_rvw = [-0.257690882000000,0.910952557000000,-2.67707561200000,2.57565789500000,2.57857672300000,2.56245366900000,0.357134202000000,0.302889858000000,0.259363450000000,0.219672325000000,0.165427981000000,0.117660747000000,0.0877808790000000,0.0681844360000000,0.0618405760000000,0.0607977500000000,0.0597549240000000,0.0640131310000000,0.0640305110000000,0.0550361350000000,0.0287221540000000,-0.00528267200000000,-0.0472390470000000,-0.0906988290000000,-0.134202063000000,-0.167633334000000,-0.208529502000000,-0.233957082000000,-0.237259081000000,-0.257690882000000,-0.257690882000000]
test_y_rip = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]

test_x_svc_2 = [0.43966394,0.444846614,0.464893808,0.499573231,0.528800062,0.549404521,0.575698096,0.610545954,0.639401872,0.654278134,0.671987619,0.684059253,0.693168251,0.703386968,0.732631717,0.767558416,0.802391939,0.837168122,0.871904885,0.906530553,0.938319726,0.976093672,1.010988117,1.045871811,1.08075909,1.11559978,1.150433302,1.185266825,1.220100348,1.240419903]
test_x_hra_2 = [0.063613777,0.097491958,0.147725577,0.160488539,0.166940664,0.170378657,0.175203151,0.189593744,0.208187166,0.228454115,0.247342615,0.278353427,0.297418731,0.31054518,0.334964353,0.359063274,0.38333174,0.431360038,0.455430702,0.479557881,0.500831054,0.520813802,0.540928419,0.565154499,0.585848394,0.601997544,0.609132558,0.62379819,0.647473249,0.653994822]
test_x_ivc_2 = [0.210180972,0.249804212,0.27738385,0.303521191,0.330319459,0.356982724,0.383638047,0.410263589,0.436686626,0.462744358,0.489022465,0.515737348,0.542883053,0.56984412,0.596596725,0.623204399,0.649738616,0.67634629,0.703001613,0.729702599,0.756479029,0.783134352,0.809730114,0.835877187,0.862337946,0.889249379,0.916303757,0.942937241,0.960781378,0.975214308]
test_x_lra_2 = [0.193814221,0.246876284,0.28636816,0.289257442,0.304608529,0.318008167,0.343988023,0.37217427,0.414406083,0.465762433,0.495604284,0.508369227,0.534431972,0.560684178,0.586948226,0.613318846,0.639902609,0.656646236,0.676808056,0.688017839,0.713235904,0.739369697,0.765373236,0.791507029,0.817771076,0.844094331,0.870429426,0.896764522,0.923099618,0.967899712]
test_x_mra_2 = [0,0.011993958,0.034546828,0.05989426,0.070981873,0.080797018,0.0923528,0.098025556,0.11236972,0.138521077,0.161821582,0.173655589,0.205906344,0.221933535,0.243612874,0.270769573,0.301768447,0.330880974,0.360073953,0.389329098,0.418554989,0.444790455,0.467809668,0.488717361,0.502009063,0.518374765,0.539028593,0.565529184,0.59629097,0.621148702]
test_x_pa_2  = [0.059668508,0.096132597,0.122651934,0.17799749,0.199610465,0.221223439,0.234431367,0.26519337,0.281767956,0.304972376,0.343696959,0.365309933,0.386922908,0.408535882,0.430148856,0.45176183,0.473374804,0.494987779,0.516600753,0.538213727,0.559826701,0.581439676,0.60305265,0.624665624,0.646278598,0.667891572,0.689504547,0.711117521,0.732730495,0.762430939]
test_x_rv_2  = [0.137970007,0.213866551,0.252075636,0.277690761,0.307610448,0.337249565,0.363436422,0.379836725,0.387759305,0.39557187,0.404420275,0.411218695,0.448858944,0.523097333,0.550299916,0.580307592,0.610255502,0.640379391,0.670664317,0.700939281,0.73097518,0.761050924,0.790897563,0.820656213,0.850351776,0.880419219,0.910822017,0.940884479,0.968805315,0.998782873]
test_x_rvw_2 = [0.039862861,0.05181616,0.111860638,0.119588584,0.16567828,0.208265382,0.257468495,0.316456635,0.373554485,0.380197892,0.380531597,0.38693455,0.394626436,0.40843415,0.423318756,0.438116461,0.452903736,0.467670156,0.482495669,0.49734899,0.512233596,0.525951628,0.537299663,0.543738072,0.550194209,0.555754211,0.566676077,0.580406623,0.595259944,0.607685219]
test_x_rip_2 = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]

test_y_svc_2 = [-0.093632545,-0.156569804,-0.248563273,-0.301476541,-0.235921787,-0.141231586,-0.085773894,-0.082261872,-0.140962809,-0.197877515,-0.265200088,-0.221202742,-0.16968826,-0.101909484,-0.030352039,-0.00042818,-0.00171831,-0.02221705,-0.055921708,-0.126843047,-0.175446921,-0.164238912,-0.145119896,-0.129602493,-0.112884552,-0.111773607,-0.113063737,-0.114353868,-0.115643998,-0.116396574]
test_y_hra_2 = [-0.299382797,-1.467779899,-0.511775349,-0.417850623,-0.361508347,-0.305197467,-0.22486145,-0.154930465,-0.087206704,-0.07891571,-0.090550506,-1.453395925,0.078052671,-0.022362065,-0.061500246,-0.063125051,-0.042238063,-0.067999466,-0.073376237,-0.071249076,-0.047892176,0.004214095,0.073829538,0.089088578,0.035530186,-0.021201939,-0.07427629,-0.127897476,-0.185801763,-0.243232994]
test_y_ivc_2 = [0.031696476,-0.385808022,-0.014551804,-0.016946247,-0.030248099,-0.031905867,-0.032878689,-0.031282963,-0.012221111,0.038348261,0.069910379,0.063800461,0.020532217,-0.00681103,-0.016174442,-0.013037587,-0.003564981,-0.000428126,-0.001400948,-0.00631221,-0.017730461,-0.018703283,-0.014539009,0.02832472,0.044133078,0.021070744,-0.01432062,-0.01340984,0.006923629,0.047571172]
test_y_lra_2 = [-0.255034936,0.459103987,-0.573549553,-0.502975286,-0.423662124,-0.348564473,-0.285450238,0.031956432,-1.858610769,-0.345972051,-0.313158926,-0.24222942,-0.193620801,-0.178167879,-0.164787187,-0.170056574,-0.21262612,-0.261767598,-0.33289446,-0.373944369,-0.369582816,-0.333407584,-0.27443781,-0.238262577,-0.224881886,-0.221862349,-0.220915044,-0.219967738,-0.219020433,-0.21999589]
test_y_mra_2 = [0.025,0.0625,0.73125,-1.75625,-0.34375,-0.259082734,-0.198561151,-0.124800472,-0.007539906,0.066220773,0.109090228,0.175,-1.16875,0.2,0.160029227,0.221307329,0.306794065,0.365802608,0.391524281,0.391524281,0.403628597,0.442589366,0.46875,0.424306805,0.31875,0.257872452,0.185372639,0.11463804,0.096481565,0.100264164]
test_y_pa_2  = [-0.074318303,-0.248797006,-0.375690608,-0.061379499,-0.031074569,-0.022840235,-0.021125945,0.418062734,-0.524148993,-0.022277669,-0.008419392,0.004358888,0.011944086,0.016283609,0.010236969,-0.011388917,-0.041128992,-0.078658689,-0.107749629,-0.124182433,-0.137044993,-0.139196822,-0.13615557,-0.109096316,-0.081712494,-0.061469159,-0.049989149,-0.046947897,-0.047152321,-0.009579398]
test_y_rv_2  = [-0.506447874,-3.606063899,-0.184851119,-0.19093376,-0.188366021,-0.154623872,-0.093759147,-0.014885036,0.055393277,0.137895402,0.224124929,0.300489323,0.61700355,-0.248408373,-0.300402058,-0.30761091,-0.308179059,-0.328300389,-0.366314724,-0.403222275,-0.413567014,-0.428338889,-0.417654736,-0.397193992,-0.369723618,-0.383573173,-0.434684449,-0.447980612,-0.460959497,-0.485655292]
test_y_rvw_2 = [-0.24851742,0.928604522,-2.72817828,2.593309859,2.564631208,2.570098221,2.566623425,2.570932172,0.363510007,0.287960062,0.237070143,0.198468192,0.150873603,0.108463599,0.089397259,0.083583503,0.079360057,0.078317231,0.068262648,0.053967238,0.034900899,0.00616756,-0.036280681,-0.080289686,-0.127002217,-0.162100562,-0.20208136,-0.232723071,-0.24701848,-0.266176067]
test_y_rip_2 = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]

signals = Signals()

def is_close_enough(list_1, list_2, tolerance=1e-4):
    similar = True

    for i in range(min(len(list_1), len(list_2))):
        similar = isclose(list_1[i], list_2[i], abs_tol=tolerance)

    return similar

def test_SVC_V1():
    [x,y] = signals.get_signal('SVC', 80, 0)

    assert is_close_enough(x, test_x_svc)
    assert is_close_enough(y, test_y_svc)

def test_SVC_V2():
    [x,y] = signals.get_signal('SVC', 80, 1)

    assert is_close_enough(x, test_x_svc_2)
    assert is_close_enough(y, test_y_svc_2)

def test_High_RA_V1():
    [x,y] = signals.get_signal('HRA', 80, 0)

    assert is_close_enough(x, test_x_hra)
    assert is_close_enough(y, test_y_hra)

def test_High_RA_V2():
    [x,y] = signals.get_signal('HRA', 80, 1)

    assert is_close_enough(x, test_x_hra_2)
    assert is_close_enough(y, test_y_hra_2)

def test_IVC_V1():
    [x,y] = signals.get_signal('IVC', 80, 0)

    assert is_close_enough(x, test_x_ivc)
    assert is_close_enough(y, test_y_ivc)

def test_IVC_V2():
    [x,y] = signals.get_signal('IVC', 80, 1)

    assert is_close_enough(x, test_x_ivc_2)
    assert is_close_enough(y, test_y_ivc_2)

def test_Mid_RA_V1():
    [x,y] = signals.get_signal('MRA', 80, 0)

    assert is_close_enough(x, test_x_mra)
    assert is_close_enough(y, test_y_mra)

def test_Mid_RA_V2():
    [x,y] = signals.get_signal('MRA', 80, 1)

    assert is_close_enough(x, test_x_mra_2)
    assert is_close_enough(y, test_y_mra_2)

def test_Low_RA_V1():
    [x,y] = signals.get_signal('LRA', 80, 0)

    assert is_close_enough(x, test_x_lra)
    assert is_close_enough(y, test_y_lra)

def test_Low_RA_V2():
    [x,y] = signals.get_signal('LRA', 80, 1)

    assert is_close_enough(x, test_x_lra_2)
    assert is_close_enough(y, test_y_lra_2)

def test_PA_V1():
    [x,y] = signals.get_signal('PA', 80, 0)

    assert is_close_enough(x, test_x_pa)
    assert is_close_enough(y, test_y_pa)

def test_PA_V2():
    [x,y] = signals.get_signal('PA', 80, 1)

    assert is_close_enough(x, test_x_pa_2)
    assert is_close_enough(y, test_y_pa_2)

def test_RV_V1():
    [x,y] = signals.get_signal('RV', 80, 0)

    assert is_close_enough(x, test_x_rv)
    assert is_close_enough(y, test_y_rv)

def test_RV_V2():
    [x,y] = signals.get_signal('RV', 80, 1)

    assert is_close_enough(x, test_x_rv_2)
    assert is_close_enough(y, test_y_rv_2)

def test_RV_Wall_V1():
    [x,y] = signals.get_signal('RVW', 80, 0)

    assert is_close_enough(x, test_x_rvw)
    assert is_close_enough(y, test_y_rvw)

def test_RV_Wall_V2():
    [x,y] = signals.get_signal('RVW', 80, 1)

    assert is_close_enough(x, test_x_rvw_2)
    assert is_close_enough(y, test_y_rvw_2)

def test_Default_Line():
    [x,y] = signals.get_signal('RIP', 80, 0)

    assert is_close_enough(x, test_x_rip)
    assert is_close_enough(y, test_y_rip)
